import { types } from 'mobx-state-tree';
import { Card } from './Card';
import { Card as CardType } from '../types/cardTypes';
import {
  generateCardDescription,
  generateIdFromName,
} from '../utils/cardGenerator';

export const CardEditorStore = types
  .model('CardEditor', {
    currentCard: Card,
    autoGenerateDescription: types.boolean,
  })
  .actions(self => ({
    updateCurrentCard(card: Partial<CardType>) {
      self.currentCard = {
        ...self.currentCard,
        /* tslint:disable no-any unfortunately because MobX State Tree types are bad... */
        ...(card as any),
      };

      // Update the id if the name is changed
      if (card.name || card.name === '') {
        self.currentCard.id = generateIdFromName(card.name);
      }

      // If auto generate description is selected and the category or
      // effects were changed, then we regenerate a card description
      if (card.category || (card.effects && self.autoGenerateDescription)) {
        self.currentCard.description = generateCardDescription(
          self.currentCard.category as any,
          self.currentCard.effects as any
        );
      }
    },
    toggleAutoGenerateDescription() {
      self.autoGenerateDescription = !self.autoGenerateDescription;

      // If auto generate description was selected then we generate a card description
      if (self.autoGenerateDescription) {
        self.currentCard.description = generateCardDescription(
          self.currentCard.category as any,
          self.currentCard.effects as any
        );
      }
    },
  }));

export type CardEditorStoreModelType = typeof CardEditorStore.Type;
